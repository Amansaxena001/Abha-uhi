module.exports = {
    env: {
        browser: true,
        es2021: true
    },
    extends: ['plugin:react/recommended', 'airbnb', 'prettier'],
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaFeatures: {
            jsx: true
        },
        ecmaVersion: 12,
        sourceType: 'module'
    },
    plugins: ['react', '@typescript-eslint'],
    rules: {
        'arrow-body-style': ['off', 'always'],
        // indent: ['error', 4],
        'no-multi-spaces': ['error'],
        'no-trailing-spaces': 'error',
        'react/prop-types': 'off', // We will use TypeScript"s types for component props instead
        'jsx-a11y/anchor-is-valid': 'off',
        'linebreak-style': 'off',
        'max-len': ['error', { code: 160, tabWidth: 2 }],
        'comma-dangle': 'off',
        quotes: ['error', 'single'],
        'operator-linebreak': 'off',
        'react/jsx-filename-extension': ['warn', { extensions: ['.ts', '.tsx'] }],
        'import/extensions': 'off',
        'no-underscore-dangle': 'off',
        'no-unused-vars': ['error', { vars: 'all', args: 'none' }],
        'no-use-before-define': 'off',
        'import/no-unresolved': 'off',
        'import/prefer-default-export': 'off',
        'react/react-in-jsx-scope': 'warn',
        'consistent-return': 'off',
        camelcase: 'off',
        'no-undef': 'off',
        'no-prototype-builtins': 'warn',
        'no-useless-escape': 'off',
        'no-plusplus': 'off',
        'no-useless-catch': 'error',
        'prefer-destructuring': 'off',
        'no-unneeded-ternary': 'warn',
        'no-nested-ternary': 'off',
        'no-restricted-globals': 'warn',
        'no-restricted-syntax': 'warn',
        'no-continue': 'warn',
        'prefer-const': 'warn',
        'array-callback-return': 'warn',
        'no-duplicate-case': 'error',
        'react/require-default-props': 'warn',
        'no-irregular-whitespace': 'warn',
        'no-unused-expressions': 'warn',
        'react/no-unescaped-entities': 'warn',
        'react/prefer-stateless-function': 'warn',
        'react/jsx-props-no-spreading': 'warn',
        'jsx-a11y/iframe-has-title': 'warn',
        'no-empty': 'error',
        'jsx-a11y/click-events-have-key-events': 'off',
        'react/jsx-closing-tag-location': 'off',
        'react/jsx-indent': 'off',
        radix: 'off',
        'no-param-reassign': 'warn',
        'react/destructuring-assignment': 'off',
        'jsx-a11y/no-noninteractive-element-interactions': 'off',
        'jsx-a11y/media-has-caption': 'off',
        'react/jsx-one-expression-per-line': 'off',
        'react/no-array-index-key': 'warn',
        'jsx-a11y/img-redundant-alt': 'warn',
        'jsx-a11y/no-static-element-interactions': 'off',
        'react/no-string-refs': 'warn',
        'jsx-a11y/heading-has-content': 'warn'
    }
};
